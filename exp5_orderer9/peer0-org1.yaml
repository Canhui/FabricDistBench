# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2.4'

volumes:
  peer0.org1.example.com:

networks:
  byfn:

services:

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    cpuset: "0,1,2,3,4,5,6,7"
    #cpuset: "0,1"
    #cpus: 2
    blkio_config:
      device_write_iops:
        - path: /dev/sda
          rate: 40
    #cpus: 2
    #blkio_config:
    #  device_write_iops:
    #    - path: /dev/sda
    #      rate: 10
    #extends:
    #  file: peer-base.yaml
    #  service: peer-base
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_byfn
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Allow more time for chaincode container to build on install.
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_CHAINCODE_SYSTEM_ESCC=disable
      - CORE_CHAINCODE_SYSTEM_VSCC=disable
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/fabric/tls
        - peer0.org1.example.com:/var/hyperledger/production
    extra_hosts:
        - "peer0.org1.example.com:192.168.0.101"
        #- "peer0.org2.example.com:192.168.0.102"
        #- "peer0.org3.example.com:192.168.0.132"
        #- "peer0.org4.example.com:192.168.0.134"
        #- "peer0.org5.example.com:192.168.0.138"
        #- "peer0.org6.example.com:192.168.0.140"
        #- "peer0.org7.example.com:192.168.0.141"
        #- "peer0.org8.example.com:192.168.0.142"
        #- "peer0.org9.example.com:192.168.0.151"
        - "orderer.example.com:192.168.0.152"
        - "orderer2.example.com:192.168.0.153"
        - "orderer3.example.com:192.168.0.154"
        - "orderer4.example.com:192.168.0.155"
        - "orderer5.example.com:192.168.0.156"
        - "orderer6.example.com:192.168.0.121"
        - "orderer7.example.com:192.168.0.123"
        - "orderer8.example.com:192.168.0.124"
        - "orderer9.example.com:192.168.0.125"
        #- "orderer10.example.com:192.168.0.126"
        #- "orderer11.example.com:192.168.0.127"
        #- "orderer12.example.com:192.168.0.131"
        #- "orderer13.example.com:192.168.0.132"
        #- "orderer14.example.com:192.168.0.135"
        #- "orderer15.example.com:192.168.0.136"
    ports:
      - 7051:7051
      #- 7052:7052
    networks:
      - byfn
